                               *lire et ecrire les fichiers


import fs, { readFile } from 'node:fs/promises'

const content=await readFile('demo.txt',{encoding: 'utf8'})
    
console.log(content)


console.log('hello')

cette syntaxe permet de lire le contenue du fichier 'demo' on utilise la methode 'readFile'

import fs, { writeFile } from 'node:fs/promises'

await writeFile('demo.txt',' bonjour gars ces sales',{
    flag:'a'

})

cette methode permet d'ajouter du contenue a l'interieur d'un fichier a travers la methode 'write file'
'copyFile'va nous permetre de copier un fichier
'unlink' va nous permetre de suprimmer un fichier
'stat' va nous donner les information sur le fichier
'open' va nous permetre d'ouvrir le fichier 'closefile'pour le fermer


                                   *notre premier serveur

import fs from 'node:fs'
import http from 'node:http'


let server=http.createServer()
  
server.on('request',function(request,response){
      
    fs.readFile('index.html',function(err,data){
    if(err) throw err;

        response.writeHead(200, { 'content-type':'text/html; charset=utf-8' });

        
        response.end(data);
   
    }); 
});

server.listen(8080);

cette syntaxe permet de creer un serveur en suite lit le contenue de notre fichier html dans ce serveur


import { createReadStream, writeFile } from 'node:fs';
import { stat } from 'node:fs/promises';

                                         
                                                        *Stream




const streanm =createReadStream('video.mp4')
const {size}= await stat('video.mp4')
let red=0
  streanm.on('data',function(chunk){
    red+=chunk.length
     console.log(Math.round(100* red/size)+"%")
  })
  streanm.on('close',function(){
            console.log('close')})

cette syntaxe me permet de lire un fichier par Stream autrement dit le lire par partie egale en donant le pourcentage evolution d lecture


                                                

                                                          *les modules et npm

-les modules nous permet de gerer de façon mieux organisé notre code son role c'est de creer un fichier externe dans lequelle l'on pourra enoncer nos 
differentes syntaxe en les bloquant dans une varriable en suite  l'on pourra faire appel a cette variable dans notre code tout simplement en important
 
- npm est un gestionnaire de paquet par defaut pour l'environnement d'execution javaScript node js .grace a l'npm on pouras intaller un module que 
l'on souhaite utiliser comme express js   

                                                     

                                            *express js :instalation,premier 'hello expree'



const { request, response } = require('express')
let express= require('express')

let app = express()
let port=3000

app.get('/',(req,res)=>res.send('hello express'))

app.listen(port,()=>console.log('Notre application node est demare sur:http://localhost:${port}'))


cette syntaxe permet de recuperer notre paquet express et on cree une instence de ce dernier en suite on defini notre port en l'attribuant une valeur
en suite on defini un point de terminaison et en fin on demare api sur le port 
                              

                                     *comprendre les routeur d'expresse


les routes d'express se resume aux differentes operation que l'on peut effectuer sur Express js notament

- le 'get' pour recuperer les informations

- le'post' pour emettre des information 

- le'put' pour modifier les information  

- le'delete' pour supprimer les informations 


                                
                                     *passer un parametre depuis url avec Express js



const express= require('express')

const app = express()
const port=3000


app.get('/api/pokemon/:id',(req,res)=>{ 
    const id = req.params.id
    res.send(`vous avez demander le pokemon no ${id} `)

})


app.listen(port,()=>console.log(`Notre application node est demare sur:http://localhost:${port}`))

cette syntaxe permet de passer le parametre id depuis url qui permetras l'acces rapide a une page de notre site