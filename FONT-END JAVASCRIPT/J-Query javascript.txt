                                       * Manipulation du Dom

il sera question pour nous de parcourir les fonctionalités qui nous seront utile en fesant un listing de fonction

-querySelector elle permet de nous renvoyer un element de notre code html grace a son id sur lequel on pourra effectuer
plusieur tratitement

-querySelectorAll elle permet de nous renvoyer plusieur element de notre code html 

-.innerHTML nous permet de voir le corp d'un element Exp: div.innerHTML 

-nom de la balise.setAttribute('ancien attribu','nouvel attribu') permet de modifier un attribu d'une balise 

-.nom de la balise.remoteAttribute ('nom de l'attribu')permet de suprimer l'attribu

- style permet d'appliquer directement du style un element a travers le javascrip Exp: li.style.color=''blue

- console.log (getComputerStyle(nom de la balise).nom du style) nous permet de voir le style qui a ete attribuer a un element

-cont new 'nom de l'element'=createElement('nom de lelement') nous permet de creer un nouveau element

-ducument .querySelector('nom d'un element').append(new'nom de element crée') permet d'ajouter un element cree a un 
element existant 'prepend' pour le mettre au debut et append pour le mettre ala fin

-'balise1'.insertAdjacentElement('nom de la position','balise2')cette requette  nous permet inserer la balise2 a une
position precise par rapport a la balise1 elle prend en parametre les positions 'afterbegin','beforebegin','afterEnd','beforeEnd'

-'nom de l'element'.REMOVE() permet de supprimer un element dans dans le DOM


                                  *syntaxe de base du jquery

-$() il signifi l'appel a la librairie jquery

-$(selecteur).methode  c'est la syntaxe pour aplliquer une methode a un selecteur en jquery

-$('p').hide() cette methode permet de cacher mon paragraphe sur ma page web

-$('.nom de la classe').methode cette syntaxe permet d'attribuer une methode a une classe precise
 
-$('selecteur').methode1.methode2.methode3 cette syntaxe permet de chainer 3 methode c'est a dire appliquer 3 methode a un 
selecteur suivant un ordre d'ecriture

- $(document).ready (function()
        {

            //Notre code lquery
        })
cette syntaxe permet d'eviter les erreur de chargement de notre code Jquery cest a dire lorque l'on auras notre page web le
code jquery chargera  simultanement avec notre page web 

                                 

                                     *Gestion des evenements:introduction
 
un evenement correspon a un moment precis ou une action se produit. l'action peut venir de l'utilisateur comme faire un click
ou du navigateur comme le chargement d'une page.par la nous verrons donc la notion de gestionnaire d'evenement composé de deux
chose: le nom de l'evenement a gerer et d'une fonction a executer lors du declanchement de l'evenement

 
-
    $('p').click(function(){
    $(this).hide()
            })
 cette syntaxe permet d'effectuer un evenement click sur un parragraphe et de pouvoir et pourvoir cacher cette 
evenement lorsque le click est effectuer
 

                                     *Evenement lies a la souris

-  $('p1').dblclick(function(){
    $(this).hide()
            })
cette syntaxe permet d'effectuer un double click sur notre premier parragraphe et de pouvoir  cacher cette 
evenement lorsque le double click est effectue

- $('.p3').hide()

            $('.p2').mouseenter(function(){
            $('.p3').show()
            })

            $('.p2').mouseleave(function(){
            $('.p3').hide()
            })

cette syntaxe permet  de cacher le paragraph3 dans un premier temp, de le faire apparaitre lorsque l'on survole le paragraphe2 et en fin de 
le cacher a nouveau lorsque l'on retir le pointeur du paragraphe2

- $('.p3').hide()

     $('.p2').hover(
                       function(){ $('.p3').show()},
                       function(){ $('.p3').haide()}
                      
         )
cette fonction fais la meme chose que la precedent en utilisant une autre methode
      
        
-            $('.p5').hide()

            $('.p4').mousedown(function(){
            $('.p5').show()
            })

            $('.p4').mouseup(function(){
            $('.p5').hide()
            })

cette syntaxe permet  de cacher le paragraph5 dans un premier temp, de le faire apparaitre lorsque l'on effectu un clic enfoncé sur le 
paragraphe4 et en fin de le cacher a nouveau lorsque l'on relache le click du paragraphe4
  
                                     
                                   *les evenemet lies au clavier

   <label for="prenom"> Entrer votre prenom</label>
    <input type="text" id="prenom" name="prenom">


    $('#prenom').keydown(function(){

        $(this).css('background-color','#69c')
         })

    $ ('#prenom').keyup(function(){ 
        $(this).css('background-color','#c72')

    })  

cette fonction permet a ce que lorsque on enter une touche dans le input de notre page en pressant sur cette tochel la couleur du label 
devien blue et lorsque on la relache la couleur deviens orange 


                            *les evenements lies au formulaire


  $('#prenom').focus(function(){

        $(this).css('background-color','#69c')
         })


cette evenement permet de maintenir le fond du label en bleu lors de l'entré d'un champ 

 <fieldset id="fld">
    <label for="prenom"> Entrer votre prenom</label>
    <input type="text" id="prenom" name="prenom">

    <label for="nom"> Entrer votre nom</label>
    <input type="text" id="prenom" name="nom">
    </fieldset>

    $('#fld').focusin(function(){

        $(this).css('background-color','yellow')
         })

    $('#fld').focusout(function(){

        $(this).css('background-color','purple')
        })    
    
cette syntaxe permet a ce que l'exterieur du label devien jaune cest a dire la fieldset lorsque l'on click en interieu et la fieldset devient
violette lorsque l'on click a l'exterieur du label

 -
   <select id="liste">

    <option value="c1" selected='selected'> hurtel </option>
    
    <option value="c2"> kemayou</option>
</select>

   $('#liste').change(function(){

alert('nouvelle option selectionée')

            

         }) 

cette syntaxe permet de m'afficher 'nouvelle option selectionée' lorque je change d'option  

-
   
    <form id="formulaire">
    <input type="submit" value="Envoyer">
    </form>
  
  $('#formulaire').submit(function(){

              alert('Formulaire envoyé')

            
})

 cette syntaxe permet  envoyer un formulaire et d'afficher une boite de dialogue pour confirmer l'envoi de ce  formulaire



                                                  *gestion des evenements avancé

Dans les gestions des evenements avancés nous aurons la posiblilité de combiner plusieur methode en une seul ce qui nous facilitera la tache dans
notre code

-la fonction ON qui peut jumeler deux autre fontion a la fois Exp:
 
<div class="div1">
        <p>bienvenue chez nous </p>
        <p> bon voyage</p>
    </div>
    <span id="msg"></span>

    $(".div1").on({
     mouseenter: function(){
    $('#msg').text('vous etes entré dans la div')
     },
     mouseleave:function(){
   $('#msg').text('vous etes sorti de    la div')
     }
    })

cette syntaxe nous permet de creer une div ,y mettre deux paragraphe, faire une fonction 'ON' qui nous affichera dans un 'span' 'vous etes entré 
dans la div' lorsque la souris se trouvera dans la div;'vous etes sortir de la div' lorque la souris se trouvera or de la div

  *gestionaire d'evenement 'off' et 'on'



       <button id="b1">pas de click possible</button>
       <button id="b2">ajouter un gestionaire click</button>
       <button id="b3">suprimmer un gestionaire click </button><br>
    <span id="msg">boutton cliquer</span>

  $('#msg').hide()
    
     $("#b2").click( function(){
     $('#b1').on('click',function(){
     $('#msg').show()
    })
    $("#b1").text('vous pouvez maintenant me cliquer')
})
    $("#b3").click( function(){
     $('#b1').off('click')
   $('#b1').text('plus de click possible')
   $('#msg').hide()
})

cette syntaxe nous permet de creer trois boutton en suite lorsque l'on click sur le deuxiemme boutton cela permet d'ajouter un gestionaire d'eve
nemet au premier boutton,lorque l'on click sur le troisiemme bouton on a la posibilité de suprimmer le gestion d'evenement au premier boutton

                                           *selestion et modification d'un element html


    
    <h1 >bienvenue</h1>
    <SPan id="text"></SPan>

 
    let taille= $('h1').css('font-size')

    $('#text').text(taille)
     
 cette syntaxe joue le role de GETEUR c'est a dire quelle permet de recuper la la taill de element h1 et de l'efficher dans un span

  <h1 >bienvenue</h1>
    <SPan id="text"></SPan>

 $('h1').css('font-size','50px')
    
    let taille= $('h1').css('font-size')

    $('#text').text(taille)


par contre celle si va jouer le role de SETEUR et un GETEUR c'est a dire attribuer une taille de 50px a notre element h1 ,la recuperer et afficher
 dans le span
 
 
<label for="prenom">Entrer un prenom</label>
    <input type="text" name="prenom" id="prenom">
    <span id="sp1"></span><br>

    <select multiple="multiple">
<option >option1</option>
<option >option2</option>
<option >option3</option>
    </select>

    <span id="sp2"></span>
      
    $('#prenom').keyup(function(){
        let valeurinput=$(this).val()
        $('#sp1').text(valeurinput)
    })

    $('select').change(function(){
        var valeurinput2=$('select').val() || []
        $('#sp2').text(valeurinput2.join(', '))
    })
     
cette syntaxe permet de recuperer a chaque foi la derniere valeur saisi/choisi dans le input/selectet l'afficher dans un span

  <h1 class="titre">bienvenue au ball</h1>
    <h2 class="t2">bienvenue pap pot</h2>
    <a > un lien</a>
    <span id="text"> </span>

 
  let atth1=$('h1').attr('class')
 $('#text').text('valeur de la classe de h1 :'+ atth1)

 $('h2').attr('class','titre')
  
 $('a').attr({
    href:'http://pierre-giraud.com',
    target: '_black'
 })

cette syntaxe nous permet de recuperer la valeur de l'attribut de la class h1 et l'efficher dans notre span en suite on modifier la valeur de 
l'attribu de la classe de h2 et en suit on defini deux attributs a la balise 'a' associés a des valeurs


  <h1 class="titre">bienvenue au ball</h1>
   <label for="c">coucher/decoucher la case</label>
   <input type="checkbox" id="c" checked="checked">


<span id="test"></span>
  
    $('#c').change(function(){
       
        let v=$(this)

        $('#test').html(
            '<br>valeur attribut:'+ v.attr('checked')+
            '<br>valeur propriété :'+ v.prop('checked'))
    }) 
 cette syntaxe d'attribuer une proiper  au chcekbox de telle sorte que lorsqu'il est coché la proprieté est a vrai ;et a faux lorsqu'il est 
decoché  


                        *se deplacer dans le DOM en jquery

 h1 class="titre">bienvenue au ball</h1>
    <p>Element p parent du <Span>premier span</Span> </p>
    <ul>
        <li>Element li parent du <span>spa n°2</span></li>
        <li>deuxieme Element li</li>
    </ul>

 $('span').parent().css('color','red')

 cette syntaxe permet de cibler elementparent du span et de l'attribuer une couleur rouge .elle pocede deux autre fonction 'parents' et 
'parentUntil'  
 

 h1 class="titre">bienvenue au ball</h1>
    <p>Element p parent du <Span>premier span</Span> </p>
    <ul>
        <li>Element li parent du <span>spa n°2</span></li>
        <li>deuxieme Element li</li>
    </ul>

 $('p').children().css('color','red')

cette syntaxe permet de cibler element enfant direct du 'p' et de l'attribuer une couleur rouge . si l'on veut cibler tout les elements enfants 
 de 'p'dans un code dans ce cas on utilisera find('*')

h1 class="titre">bienvenue au ball</h1>
    <p>Element p parent du <Span>premier span</Span> </p>
    <ul>
        <li>Element li parent du <span>spa n°2</span></li>
        <li>deuxieme Element li</li>
    </ul>

 $('p').siblings().css('color','red')

cette syntaxe permet de cibler element frere du 'p'cest a dire l'element du meme niveau et de l'attribuer une couleur rouge.on pourras preciser le
frere que l'on veut choisir $('p').siblings('ul').css('color','red')


                      *fitrer les element html

 <h1 class="titre">bienvenue au ball</h1>
    <p>Element p parent du premier  </p>
    <p>Element p parent du premier  </p>
    <p>Element p parent du premier  </p>
    <p>Element p parent du premier  </p>
    
   $(document).ready (function(){
    $('p').eq(2).css('color','red')
  

cette syntaxe me permet de selectioner le troisieme de ma colection a traver le fonction 'eq' et son index et l'attribuer une couleur rouge. l'on 
peut utiliser le fonction first()/last() pour selectionner le premmier/dernier element de la colection


<h1 class="titre">bienvenue au ball</h1>
    <ul>
       <li>element numero 1 de la liste</li> 
       <li>element numero 2 de la liste</li> 
       <li>element numero 3 de la liste</li> 
       <li>element numero 4 de la liste</li> 
    </ul>

    <table>
        <tr><th>prenom</th><th>nom</th></tr>
        <tr><td>durant</td><td>lucass</td></tr>
        <tr><td>victoire</td><td>nana</td></tr>
        <tr><td>orine</td><td>kemayou</td></tr>
    </table>

 <script>

$(document).ready (function(){
    $('li').filter(':nth-child(even)').css('color','red')
    $('tr').filter(':nth-child(odd)').css('background-color','blue') 

cette methode nous permet de filter nos element selon qu'ils on une position paire et impaire et les attribuer une couleur particuliere pour cela 
on a utilisé lq methode 'filter' ayant en argument 'even' et 'odd'. pour faire l'opposé de ce que l'on viens de realiser on utilisera la
 methode'not' a la place de filter prenant toujour en compte les meme aguments 'even' et 'odd'

                                            
                                               *insertion et supression du contenue html

<h1 class="titre">bienvenue au ball</h1>
   <p id="p1">premier paragraphe</p>
   <p id="p2">deuxieme paragraphe</p>
 <button id="b1">utiliser append </button>
   <button id="b2">utiliser prepend</button>

$('#b1').click(function(){
    $('#p1').append(' text insere avec append')
    })   
     $('#b2').click(function(){
       $('#p2').prepend(' text insere avec prepend')

cette syntaxe permet d'inserer un text dans un contenu html a l'aide de deux boutton . lorsque l'on cliquera sur le premier boutton il ajoutera du
text a la suite du premier paragraphe :c'est la methode 'append';lorsque l'on cliquera sur le deuxieme boutton il ajoutera du text a la suite du 
deuxieme paragraphe :c'est la methode 'prepend'
 
NB.l'on peut aussibutilitser la methode 'after' et 'before' la diffirence AFTER ajoutera l'element apres le paragraphe au non a la suite et BEFORE 
ajoutera l'element avant le paragraphe au non au debut 

  <p id="p1">premier paragraphe</p>
   <p id="p2">deuxieme paragraphe</p>
 <button id="b1">suprimer p1 </button>
   <button id="b2">suprimer p2</button>

 $('#b1').click(function(){
    $('p').remove(' #p1')
    })   
     $('#b2').click(function(){
       $('p').remove('#p2')
     })

cette syntaxe me permet de suprimer mon premier paragraphe lorsque l'on click sur le bouton1 ;suprimer mon deuxieme paragraphe lorsque l'on click 
sur le bouton2 .on utilise la methode 'remove' on poura ausi utilise la methode 'empty' 
 

                                   *Autre operation sur le DOM


<h1 class="titre">bienvenue au ball</h1>
   <p id="p1">premier paragraphe</p>
   <p id="p2">deuxieme paragraphe</p>
 <button id="b1">remplacer l'element p1 </button><br>
   <span id="msg"></span>


 $('#b1').click(function(){
        var rpl= $('#p1').replaceWith('<h2> un titre h2</h2>')
    $('#msg').text(' ancien text: '+ rpl.text())
    })  

cette methode me permet de remplacer  un paragraphe par un  titre lorsque l'on click sur le bouton et affiche l'ancien paragraphe dans un span on 
utile la methode 'replaceWith' l'on poura aussi utliser la methode 'replaceall' 
 
<style>
    div{
        margin: 5px;
        padding: 5px;
    }
    .wrap{border: 1px solid red;}
    .wrapA{border: 1px solid blue;}
    .wrapI{border: 1px solid lime;}
  </style>


<h1 class="titre">bienvenue au ball</h1>
   <p class="toWrap">premier paragraphe</p>
   <p class="toWrap">deuxieme paragraphe</p><br>

   <button id="b1">ajouter le wrap</button>
   <button id="b2">suprimer le wrap</button><br>

   <p class="toWrapAll">troisieme paragraphe</p>
   <p class="toWrapAll">4 paragraphe</p><br>

   <button id="b3">ajouter le wrapAll</button>
   <button id="b4">suprimer le wrapAll</button><br>

   <p class="toWrapInner">5 paragraphe</p>
   <p class="toWrapInner">6 paragraphe</p><br>

   <button id="b5">ajouter le wrapInner</button>
   <button id="b6">suprimer le wrapInner</button>

   
    $('#b1').click(function(){$('.toWrap').wrap('<div class="wrap"></div>')})
    
    $('#b2').click(function(){ $('.toWrap').unwrap()})


    $('#b3').click(function(){$('.toWrapAll').wrapAll('<div class="wrapA"></div>')})
       
    $('#b4').click(function(){$('.toWrapAll').unwrap()}) 


    $('#b5').click(function(){$('.toWrapInner').wrapInner('<div class="wrapA"></div>')})
       
    $('#b6').click(function(){$('.toWrapInner').unwrap()}) 

cette methode nous permet:

-d'entourer le paragraph1 et le paragraphe2 avec chacun une div lorque l'on click sur le bouton 'b1' et le suprime lorsque l'on click sur le bouton
'b2' methode'wrap'et 'unwrap'

-d'entourer les paragraphe 3 et 4 avec une seul div lorque l'on click sur le bouton 'b3' et le suprime lorsque l'on click sur le bouton  'b4'
methode'wrapAll' et 'unwrap'

-d'entourer le contenue des  paragraphe 5 et 6 avec chacun une div lorque l'on click sur le bouton 'b6' et le suprime lorsque l'on click sur le 
bouton 'b6' methode 'wrapInner' et 'unwrap' 
           

                                    *modification du style css de element html

  <style>
    div{
        border: 1px solid black;
    }
    .defaut{font-size: 30px;}
    .orange{background-color: orange;}
    .gras{font-weight: bold;}
    .center{text-align: center;}
    
  </style>

<div id="monDiv" class="defaut">
        <p> premier paregraph</p>
        <p>deuxieme paregraph</p>
    </div>

    <button id="b1"> ajouter </button>
    <button id="b2"> suprimer </button>

 
   $('#b1').click(function(){
    $('#monDiv').addClass('orange gras center')
   })
   $('#b2').click(function(){
    $('#monDiv').removeClass('defaut orange gras center')
   })

cette methode permet dans un premier temp d'attribuer les classe de style css a ma 'div' en cliquant sur le bouton 'b1' et les suprimer en cliquant 
sur le bouton 'b2' on utilise la methode 'addClasse' et 'removeClass' on pourra aussi utiliser la methode 'toggleClass' pour ajouter une classe si
elle n'existe pas davance et la suprimer si elle est deja presente.

 <p> premier paregraph</p>
        <p>deuxieme paregraph</p>
    
   <br> <span id="msg"></span><br>

    <button id="b1"> modifier la couleur  et le poid des paragraphe </button>


var taille =$('p').css('font-size')
   
    $('#msg').text('taille du text de bas:' + taille)
    
    $('#b1').click(function(){
         
     $('p').css({'color':'orange','font-family':'wide latin'})

cette syntaxe me permet d'utiliser le css comme GETEUR dans le cas ou il nous renvoie taille de notre paragraph ,comme SETEUR dans le cas ou l'on 
atribue  une couleur et une police a notre paragraph en cliquant sur le bouton 'b1'  
